csv_file_path = "#{Rails.root}/lib/Versions_Data_#{Time.now}.csv"
CSV.open(csv_file_path, "wb") do |csv|
    Student.where(id: ids).each do |stu|
        csv << [stu.id, stu.versions.last(3)]
    end
end



# These are the Student ids which are updated today
ids = [67,10,61,87,56,25,79,152,22,635,63,32,39,60,69,62,45,7,47,40,41,42,46,55,85,78,59,81,90,607,58,83,82,19,27,5,57,35,4,28,71,21,92,50,72,632,38,77,91,31,18,1,52,76,23,16,20,2,11,3,24,30,14,34,6,26,36,44,51,13,15,88,74,64,84,73,8,617,615,637,37,49,53,43,75,65,89,54,66,9,68,631,597,589,591,135,619,117,127,143,594,103,95,107,606,121,144,140,116,29,100,93,126,123,119,115,122,195,588,104,582,102,595,108,105,106,94,600,598,590,592,581,601,596,114,142,136,141,603,109,604,112,111,124,605,118,128,120,139,113,17,99,137,132,110,134,129,131,585,138,586,96,133,130,602,593,125,101,181,190,217,200,158,98,225,223,219,191,212,213,170,171,224,165,285,168,222,193,196,204,211,221,167,209,218,198,179,197,164,185,174,199,183,207,169,215,203,192,173,186,182,161,202,162,210,226,177,206,187,156,184,208,178,159,163,160,194,157,155,188,166,214,216,180,189,236,268,250,265,244,274,233,273,238,232,240,276,251,253,254,262,282,288,275,286,292,295,277,284,269,239,227,243,237,230,266,267,270,263,264,247,287,280,294,259,229,241,260,290,279,258,256,289,248,281,261,252,291,613,293,231,228,235,242,245,249,333,332,352,337,312,329,315,340,296,321,328,307,313,325,322,298,331,336,354,359,339,334,335,338,344,347,350,308,314,316,319,318,351,363,302,303,309,353,358,356,341,311,348,346,323,345,317,357,361,304,362,355,349,320,305,342,636,327,326,300,324,330,360,371,365,378,387,385,368,384,377,415,369,370,375,379,366,395,414,391,411,394,404,405,393,399,400,397,401,403,410,409,408,413,372,386,396,412,398,367,407,406,389,381,388,374,376,383,382,430,442,426,422,423,419,449,448,452,424,421,420,427,451,441,438,450,437,436,416,418,433,417,432,444,428,440,434,425,429,439,443,435,485,461,463,484,496,458,500,478,492,456,460,476,494,472,487,489,457,469,509,504,508,488,468,454,498,453,502,467,474,473,506,455,501,465,466,479,503,486,477,462,481,499,491,495,470,480,483,490]

# These are the ids which dont have invoices 
no_inv = [127, 333, 337, 312, 492, 460, 315, 265, 244, 158, 430, 384, 340, 321, 328, 98, 331, 238, 423, 379, 366, 240, 251, 253, 254, 262, 119, 115, 391, 405, 393, 399, 400, 397, 401, 403, 170, 335, 338, 344, 347, 314, 318, 351, 363, 309, 193, 204, 167, 94, 227, 32, 39, 489, 452, 7, 40, 41, 42, 46, 85, 247, 164, 199, 183, 169, 192, 173, 134, 129, 131, 462, 428, 388, 155, 88, 73, 429, 374, 376, 245, 101, 490, 249, 189, 65, 66]

arr = ids - no_inv
updated = {}
Student.where(id: arr).each do |stu|
    #Find student and update grade with last invoice class_no
    gr = stu.invoices.last.class_no
    stu.update_column(:grade, gr)
    updated.merge!( stu.id => gr )
end
puts updated

# Output 
# irb(main):062:0> puts updated
# {181=>"1", 597=>"PP-2", 589=>"PP-2", 591=>"PP-2", 135=>"PP-2", 619=>"PP-2", 117=>"PP-2", 485=>"6", 371=>"4", 365=>"4", 378=>"4", 190=>"1", 217=>"PP-2", 200=>"1", 143=>"PP-1", 594=>"PP-2", 332=>"3", 352=>"3", 103=>"PP-2", 95=>"PP-2", 10=>"PP-1", 61=>"Nursery", 87=>"PP-1", 56=>"PP-1", 25=>"PP-1", 79=>"PP-1", 67=>"Nursery", 107=>"PP-2", 461=>"6", 606=>"PP-1", 463=>"6", 484=>"6", 496=>"6", 121=>"PP-2", 458=>"6", 500=>"5", 144=>"PP-2", 140=>"PP-2", 152=>"Playgroup", 22=>"PP-1", 635=>"PP-1", 478=>"6", 456=>"5", 476=>"6", 329=>"3", 236=>"2", 268=>"2", 250=>"2", 274=>"2", 116=>"PP-1", 387=>"4", 494=>"6", 472=>"6", 487=>"6", 442=>"5", 385=>"4", 368=>"4", 377=>"4", 296=>"3", 307=>"3", 313=>"3", 325=>"3", 322=>"3", 29=>"PP-2", 100=>"PP-2", 93=>"PP-1", 126=>"PP-1", 415=>"4", 369=>"4", 298=>"3", 233=>"2", 273=>"2", 232=>"2", 225=>"PP-2", 426=>"4", 422=>"5", 370=>"3", 375=>"4", 276=>"1", 223=>"PP-2", 123=>"PP-2", 219=>"1", 122=>"PP-2", 282=>"2", 395=>"4", 288=>"2", 414=>"4", 411=>"3", 394=>"4", 404=>"4", 195=>"PP-2", 588=>"PP-1", 336=>"3", 354=>"3", 359=>"2", 275=>"2", 286=>"2", 292=>"2", 295=>"2", 277=>"2", 284=>"2", 191=>"1", 212=>"1", 213=>"1", 171=>"PP-2", 224=>"PP-2", 165=>"1", 285=>"1", 168=>"PP-2", 222=>"1", 339=>"3", 334=>"3", 350=>"2", 308=>"2", 316=>"3", 319=>"2", 302=>"3", 303=>"2", 196=>"PP-2", 211=>"PP-2", 221=>"PP-2", 104=>"PP-2", 582=>"PP-2", 102=>"PP-2", 595=>"PP-2", 108=>"PP-1", 105=>"PP-1", 106=>"PP-1", 419=>"5", 410=>"4", 63=>"PP-1", 409=>"4", 408=>"4", 353=>"3", 269=>"2", 239=>"2", 243=>"2", 237=>"2", 230=>"1", 600=>"PP-2", 598=>"PP-2", 590=>"PP-2", 592=>"PP-2", 60=>"Nursery", 69=>"PP-1", 62=>"PP-1", 45=>"PP-1", 457=>"6", 469=>"6", 449=>"4", 448=>"4", 266=>"1", 267=>"2", 270=>"1", 509=>"5", 504=>"6", 508=>"5", 47=>"PP-1", 55=>"Nursery", 488=>"6", 581=>"PP-2", 601=>"PP-2", 596=>"PP-2", 424=>"4", 413=>"4", 358=>"3", 263=>"2", 264=>"2", 287=>"1", 280=>"1", 421=>"4", 209=>"1", 218=>"PP-2", 114=>"PP-2", 372=>"4", 294=>"2", 356=>"3", 78=>"PP-1", 259=>"1", 198=>"1", 179=>"1", 197=>"PP-2", 468=>"6", 59=>"PP-1", 81=>"PP-1", 454=>"6", 420=>"5", 427=>"5", 341=>"3", 142=>"PP-2", 136=>"PP-1", 90=>"Nursery", 229=>"1", 311=>"3", 386=>"4", 185=>"1", 498=>"6", 453=>"6", 451=>"4", 396=>"4", 348=>"3", 412=>"3", 241=>"2", 174=>"1", 141=>"PP-1", 607=>"PP-1", 58=>"PP-1", 83=>"PP-1", 346=>"3", 207=>"1", 603=>"PP-2", 215=>"PP-2", 323=>"3", 203=>"PP-2", 109=>"PP-2", 502=>"6", 398=>"3", 260=>"2", 345=>"3", 290=>"2", 82=>"PP-1", 604=>"PP-2", 112=>"PP-2", 19=>"PP-1", 27=>"PP-1", 5=>"Nursery", 467=>"6", 279=>"1", 186=>"PP-2", 111=>"PP-2", 474=>"6", 441=>"5", 317=>"2", 182=>"1", 438=>"5", 357=>"3", 124=>"PP-2", 57=>"Nursery", 367=>"3", 161=>"1", 361=>"2", 258=>"2", 35=>"PP-1", 256=>"1", 289=>"2", 248=>"2", 202=>"1", 162=>"1", 605=>"PP-2", 4=>"PP-1", 473=>"6", 281=>"2", 261=>"2", 28=>"PP-1", 118=>"PP-1", 304=>"3", 210=>"1", 362=>"3", 226=>"PP-2", 355=>"3", 349=>"3", 177=>"1", 128=>"PP-2", 506=>"6", 120=>"PP-2", 139=>"PP-2", 455=>"6", 450=>"5", 407=>"4", 252=>"2", 71=>"PP-1", 501=>"6", 206=>"1", 113=>"PP-2", 17=>"PP-2", 99=>"PP-2", 437=>"5", 21=>"PP-1", 406=>"4", 320=>"2", 465=>"5", 187=>"1", 466=>"6", 436=>"4", 156=>"PP-2", 137=>"PP-2", 416=>"5", 389=>"4", 92=>"PP-1", 50=>"PP-1", 305=>"3", 184=>"1", 479=>"6", 503=>"6", 291=>"2", 132=>"PP-1", 110=>"PP-1", 72=>"Nursery", 342=>"3", 208=>"1", 178=>"PP-2", 486=>"5", 477=>"6", 585=>"PP-2", 138=>"PP-2", 481=>"5", 418=>"5", 433=>"5", 417=>"5", 636=>"3", 613=>"2", 586=>"PP-2", 96=>"PP-2", 632=>"PP-1", 38=>"Nursery", 133=>"PP-1", 130=>"PP-2", 77=>"PP-1", 91=>"Nursery", 31=>"PP-1", 432=>"5", 444=>"5", 381=>"4", 293=>"2", 440=>"5", 434=>"5", 602=>"PP-1", 593=>"PP-1", 125=>"PP-2", 18=>"PP-1", 499=>"6", 491=>"6", 1=>"PP-1", 52=>"PP-1", 495=>"6", 470=>"6", 480=>"6", 76=>"PP-1", 23=>"PP-1", 16=>"PP-1", 20=>"PP-1", 2=>"PP-1", 11=>"PP-1", 3=>"Nursery", 327=>"2", 326=>"3", 300=>"3", 324=>"3", 231=>"2", 24=>"PP-1", 30=>"PP-1", 14=>"PP-1", 34=>"PP-1", 6=>"PP-1", 159=>"1", 163=>"1", 160=>"PP-2", 194=>"1", 157=>"1", 188=>"1", 166=>"PP-2", 214=>"1", 216=>"1", 180=>"1", 26=>"PP-1", 36=>"PP-1", 44=>"PP-1", 51=>"PP-1", 13=>"Nursery", 15=>"Nursery", 74=>"PP-1", 64=>"PP-1", 84=>"PP-1", 8=>"PP-1", 425=>"5", 383=>"4", 382=>"4", 330=>"3", 360=>"3", 228=>"2", 235=>"2", 242=>"2", 617=>"PP-1", 615=>"PP-1", 637=>"PP-1", 483=>"5", 439=>"5", 443=>"5", 435=>"5", 37=>"PP-1", 49=>"PP-1", 53=>"PP-1", 43=>"PP-1", 75=>"PP-1", 89=>"PP-1", 54=>"Nursery", 9=>"Nursery", 68=>"Nursery", 631=>"PP-1"}
# => nil

updated_ids = []
not_updated = []
Student.where(id: no_inv).each do |student|
    str = student.versions.first.object_changes
    match_data = str.match(/grade:\n-\s*\n-\s*(\w+)/)
    if match_data
        grade = match_data[1]
        student.update_column(:grade, grade)
        updated_ids << student.id
    else
        not_updated << student.id
    end
end


# Output
# irb(main):127:0> updated_ids
# => [127, 158, 98, 119, 115, 170, 193, 204, 167, 94, 32, 39, 7, 40, 41, 42, 46, 85, 164, 199, 183, 169, 192, 173, 134, 129, 131, 155, 88, 73, 101, 189, 65, 66]
# irb(main):128:0> not_updated
# => [333, 337, 312, 492, 460, 315, 265, 244, 430, 384, 340, 321, 328, 331, 238, 423, 379, 366, 240, 251, 253, 254, 262, 391, 405, 393, 399, 400, 397, 401, 403, 335, 338, 344, 347, 314, 318, 351, 363, 309, 227, 489, 452, 247, 462, 428, 388, 429, 374, 376, 245, 490, 249]

updated_ids_new = []
not_updated_ids = []
Student.where(id: not_updated).each do |student|
    str = student.versions.first.object_changes
    match_data = str.match(/grade:\n-\s*\n-\s*(?:'(\d+)'|(\w+))/)
    if match_data
        grade = match_data[1]
        student.update_column(:grade, grade)
        updated_ids_new << student.id
    else
        not_updated_ids << student.id
    end
end

# Output
# irb(main):148:0> updated_ids_new
# => [333, 337, 312, 492, 460, 315, 265, 244, 430, 384, 340, 321, 328, 331, 238, 423, 379, 366, 240, 251, 253, 254, 262, 391, 405, 393, 399, 400, 397, 401, 403, 335, 338, 344, 347, 314, 318, 351, 363, 309, 227, 489, 452, 247, 462, 428, 388, 429, 374, 376, 245, 490, 249]
# irb(main):149:0>
# irb(main):150:0> not_updated_ids
# => []

error_updated_ids = []
not_updated_ids = []
Student.where(id: not_updated).each do |student|
    str = student.versions.first.object_changes
    match_data = str.match(/grade:\n-\s*\n-\s*(?:'(\d+)'|(\w+))/)
    if match_data
        grade = match_data[1] || match_data[2]
        student.update_column(:grade, grade)
        error_updated_ids << student.id
    else
        not_updated_ids << student.id
    end
end

# Output
# irb(main):178:0> error_updated_ids
# => [333, 337, 244, 312, 492, 460, 315, 265, 384, 430, 340, 321, 328, 238, 423, 379, 366, 240, 251, 253, 331, 254, 262, 405, 393, 399, 400, 397, 401, 403, 391, 338, 344, 347, 314, 318, 351, 363, 309, 335, 227, 489, 452, 247, 462, 428, 388, 429, 374, 376, 245, 490, 249]
# irb(main):179:0> not_updated_ids
# => []

# Now update all Students back to origin grade
updated = []
not_updated = []
Student.all.each do |student|
    str = student.versions.first.object_changes
    match_data = str.match(/grade:\n-\s*\n-\s*(?:'(\d+)'|(\w+))/)
    if match_data
        grade = match_data[1] || match_data[2]
        student.update_column(:grade, grade)
        updated << student.id
    else
        not_updated << student.id
    end
end

# Output
# irb(main):197:0> updated
# => [549, 371, 610, 551, 181, 548, 365, 378, 190, 217, 200, 143, 594, 597, 589, 591, 135, 619, 117, 485, 127, 516, 48, 12, 33, 537, 61, 87, 56, 86, 25, 79, 107, 461, 97, 606, 463, 484, 496, 332, 352, 103, 95, 10, 67, 121, 333, 513, 530, 533, 529, 337, 80, 70, 642, 152, 22, 635, 478, 268, 250, 145, 274, 150, 153, 146, 116, 151, 244, 458, 500, 158, 144, 140, 456, 476, 329, 236, 312, 492, 460, 315, 265, 307, 387, 494, 472, 487, 442, 385, 313, 325, 322, 29, 100, 93, 176, 126, 98, 511, 368, 377, 296, 384, 430, 340, 175, 172, 321, 328, 225, 426, 422, 262, 370, 375, 238, 276, 223, 415, 369, 298, 233, 273, 232, 123, 219, 423, 122, 119, 379, 366, 272, 240, 115, 251, 253, 331, 246, 220, 254, 395, 288, 414, 411, 393, 394, 404, 195, 399, 400, 397, 401, 282, 299, 588, 336, 354, 359, 297, 275, 286, 292, 295, 403, 391, 405, 277, 284, 191, 212, 213, 171, 224, 165, 285, 170, 380, 222, 339, 168, 334, 350, 344, 308, 347, 314, 318, 316, 319, 351, 302, 303, 363, 309, 335, 196, 211, 338, 204, 221, 167, 104, 582, 94, 102, 373, 595, 108, 644, 105, 106, 193, 343, 237, 230, 600, 598, 590, 592, 60, 69, 62, 45, 32, 39, 227, 148, 419, 410, 63, 409, 408, 353, 269, 446, 392, 431, 239, 243, 390, 457, 646, 469, 449, 448, 266, 267, 270, 497, 459, 7, 489, 452, 475, 447, 652, 147, 85, 541, 540, 539, 554, 509, 504, 508, 47, 55, 534, 40, 41, 521, 42, 507, 531, 46, 528, 526, 519, 515, 520, 647, 665, 561, 287, 563, 280, 247, 488, 581, 601, 599, 583, 587, 596, 424, 413, 575, 358, 263, 264, 578, 573, 584, 579, 565, 570, 571, 576, 218, 205, 114, 372, 294, 356, 78, 259, 198, 179, 577, 197, 468, 59, 482, 81, 569, 454, 420, 427, 623, 341, 421, 142, 136, 209, 90, 164, 257, 559, 311, 386, 185, 498, 453, 546, 517, 451, 396, 348, 412, 241, 174, 141, 525, 183, 607, 58, 83, 346, 624, 154, 229, 207, 523, 603, 199, 271, 301, 558, 543, 323, 502, 398, 260, 345, 290, 82, 604, 112, 580, 532, 19, 27, 5, 203, 467, 279, 186, 109, 111, 169, 608, 614, 215, 192, 173, 310, 441, 538, 522, 182, 553, 536, 438, 572, 124, 57, 367, 161, 361, 258, 35, 256, 289, 248, 202, 306, 162, 605, 4, 473, 149, 609, 474, 317, 357, 562, 304, 210, 362, 618, 226, 564, 281, 355, 550, 349, 261, 28, 177, 128, 118, 506, 120, 139, 455, 450, 464, 252, 71, 510, 527, 278, 99, 437, 501, 206, 21, 406, 320, 465, 187, 113, 466, 17, 436, 156, 137, 416, 389, 92, 50, 305, 184, 545, 255, 567, 524, 568, 503, 110, 560, 72, 552, 342, 208, 493, 178, 486, 620, 639, 666, 291, 134, 129, 611, 630, 512, 648, 625, 479, 653, 132, 131, 655, 661, 613, 471, 662, 654, 586, 626, 555, 96, 649, 632, 612, 477, 656, 585, 138, 481, 283, 234, 418, 38, 433, 417, 462, 636, 621, 77, 91, 31, 293, 440, 434, 628, 622, 432, 444, 650, 633, 602, 133, 659, 381, 593, 445, 505, 658, 640, 130, 663, 657, 125, 18, 428, 629, 556, 557, 1, 664, 52, 495, 480, 76, 470, 23, 201, 16, 402, 641, 643, 645, 651, 634, 566, 660, 616, 574, 499, 542, 547, 544, 491, 514, 535, 518, 20, 2, 11, 3, 327, 326, 300, 324, 231, 24, 30, 14, 34, 6, 388, 36, 44, 51, 13, 15, 73, 74, 64, 84, 8, 155, 159, 163, 160, 194, 157, 188, 166, 214, 216, 180, 26, 88, 637, 374, 376, 245, 483, 439, 638, 627, 425, 383, 382, 330, 443, 435, 360, 228, 235, 242, 617, 615, 101, 189, 490, 249, 429, 37, 49, 53, 43, 75, 89, 54, 9, 68, 631, 65, 66]
# irb(main):198:0>
# irb(main):199:0> not_updated
# => [407] Fixed this by manually checking and updating

# This is the FINAL script that can be used on all students to update the grades back to created with grade
updated = []
not_updated = []
Student.kept.each do |student|
    str = student.versions.first.object_changes
    match_data = str.match(/grade:\n-\s*\n-\s*(?:'(\d+)'|(\w+(?:-\w+)?))/)
    if match_data
        grade = match_data[1] || match_data[2]
        student.update_column(:grade, grade)
        updated << student.id
    else
        not_updated << student.id
    end
end

# Output 
# irb(main):252:0> not_updated
# => [407]
# irb(main):253:0> Student.find 407
# D, [2023-07-21T22:02:13.154515 #4275] DEBUG -- :   Student Load (0.7ms)  SELECT "students".* FROM "students" WHERE "students"."id" = $1 LIMIT $2  [["id", 407], ["LIMIT", 1]]
# => #<Student id: 407, first_name: "Vipul Nitin", last_name: "Choure", admission_no: 420, phone_number: 7898599953, grade: "3", section: "A", father_name: "Mr. Nitin Choure", mother_name: "Mrs. Ashwini Choure", created_at: "2023-01-01 20:48:39", updated_at: "2023-07-21 21:35:42", dob: "2014-04-04", date_of_admission: "2017-02-07", discarded_at: nil, pending_fees: {"2023"=>["07", "08", "09", "10", "11", "12"]}, fee_pending: false>
# irb(main):254:0> Student.find(407).invoices.last.clas_no
# D, [2023-07-21T22:02:30.088514 #4275] DEBUG -- :   Student Load (0.6ms)  SELECT "students".* FROM "students" WHERE "students"."id" = $1 LIMIT $2  [["id", 407], ["LIMIT", 1]]
# D, [2023-07-21T22:02:30.090454 #4275] DEBUG -- :   Invoice Load (0.7ms)  SELECT "invoices".* FROM "invoices" WHERE "invoices"."student_id" = $1 ORDER BY "invoices"."id" DESC LIMIT $2  [["student_id", 407], ["LIMIT", 1]]
# Traceback (most recent call last):
#         1: from (irb):254
# NoMethodError (undefined method `clas_no' for #<Invoice:0x0000557a9a005d60>)
# irb(main):255:0> Student.find(407).invoices.last.class_no
# D, [2023-07-21T22:02:32.077734 #4275] DEBUG -- :   Student Load (0.7ms)  SELECT "students".* FROM "students" WHERE "students"."id" = $1 LIMIT $2  [["id", 407], ["LIMIT", 1]]
# D, [2023-07-21T22:02:32.079665 #4275] DEBUG -- :   Invoice Load (0.7ms)  SELECT "invoices".* FROM "invoices" WHERE "invoices"."student_id" = $1 ORDER BY "invoices"."id" DESC LIMIT $2  [["student_id", 407], ["LIMIT", 1]]
# => "4"
# irb(main):256:0> updated
# => [200, 127, 181, 190, 485, 516, 217, 143, 594, 597, 589, 549, 371, 610, 551, 548, 365, 378, 591, 135, 619, 117, 87, 56, 86, 461, 25, 95, 121, 463, 484, 496, 332, 352, 107, 10, 333, 513, 530, 533, 529, 337, 79, 642, 606, 537, 61, 67, 103, 478, 268, 250, 116, 151, 244, 458, 500, 456, 476, 329, 236, 312, 492, 460, 315, 158, 144, 140, 635, 274, 150, 153, 146, 152, 265, 22, 472, 487, 442, 100, 511, 368, 377, 385, 296, 384, 313, 325, 321, 322, 328, 93, 29, 430, 340, 126, 98, 307, 387, 494, 375, 238, 276, 123, 415, 298, 233, 273, 232, 423, 379, 366, 251, 253, 331, 254, 223, 219, 122, 119, 426, 422, 262, 370, 369, 240, 225, 115, 288, 414, 411, 393, 394, 404, 191, 399, 400, 397, 401, 282, 336, 354, 359, 286, 292, 295, 403, 391, 405, 277, 284, 212, 213, 171, 224, 165, 170, 285, 588, 195, 395, 275, 339, 196, 334, 350, 344, 308, 347, 314, 318, 316, 319, 351, 302, 303, 363, 309, 335, 211, 204, 338, 221, 167, 104, 582, 94, 102, 108, 106, 644, 193, 222, 595, 105, 168, 60, 69, 62, 45, 410, 63, 409, 32, 408, 353, 269, 39, 237, 227, 148, 230, 239, 243, 592, 600, 598, 590, 419, 7, 489, 452, 652, 457, 646, 469, 449, 448, 266, 267, 270, 47, 55, 40, 41, 147, 42, 85, 541, 540, 539, 554, 46, 509, 528, 504, 519, 515, 520, 508, 647, 665, 601, 561, 424, 263, 264, 287, 563, 280, 247, 413, 578, 573, 579, 565, 596, 488, 575, 358, 570, 571, 576, 581, 198, 356, 78, 259, 142, 136, 577, 209, 468, 59, 81, 569, 454, 372, 420, 427, 623, 421, 164, 218, 90, 114, 179, 294, 341, 197, 311, 386, 174, 498, 453, 546, 517, 451, 396, 348, 412, 241, 141, 607, 207, 559, 58, 83, 346, 624, 154, 229, 603, 523, 199, 183, 185, 543, 323, 398, 260, 345, 290, 82, 186, 109, 580, 532, 19, 27, 5, 502, 111, 467, 279, 169, 215, 192, 608, 614, 604, 112, 203, 558, 173, 538, 124, 553, 438, 572, 202, 57, 367, 162, 361, 258, 35, 256, 289, 248, 605, 4, 473, 149, 609, 441, 522, 474, 317, 357, 182, 161, 536, 128, 362, 281, 355, 550, 349, 261, 28, 118, 506, 455, 450, 252, 71, 510, 527, 120, 562, 304, 618, 564, 210, 177, 139, 226, 501, 156, 320, 465, 137, 184, 466, 17, 436, 416, 389, 50, 305, 545, 567, 524, 568, 206, 437, 21, 406, 92, 187, 113, 99, 208, 342, 134, 129, 560, 639, 666, 291, 611, 512, 648, 625, 479, 653, 655, 661, 72, 110, 178, 132, 503, 131, 486, 620, 630, 138, 612, 477, 656, 586, 481, 418, 38, 433, 417, 462, 636, 96, 654, 649, 632, 613, 626, 555, 621, 662, 585, 440, 434, 628, 622, 650, 633, 125, 659, 381, 658, 640, 657, 428, 602, 133, 593, 130, 432, 77, 91, 444, 31, 293, 18, 663, 664, 52, 495, 480, 76, 470, 23, 16, 641, 645, 651, 634, 616, 629, 574, 547, 544, 556, 557, 1, 491, 535, 518, 643, 566, 660, 499, 542, 514, 326, 300, 324, 231, 24, 30, 14, 34, 6, 388, 20, 2, 11, 3, 327, 216, 180, 26, 88, 155, 159, 163, 160, 194, 157, 188, 166, 214, 36, 44, 51, 13, 15, 73, 74, 64, 84, 8, 383, 382, 330, 443, 435, 360, 228, 235, 242, 490, 249, 429, 189, 617, 615, 101, 637, 374, 376, 245, 483, 439, 638, 627, 425, 37, 49, 53, 43, 75, 89, 54, 9, 68, 65, 66, 631]